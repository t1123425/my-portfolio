{"version":3,"file":"static/js/828.87fad8b1.chunk.js","mappings":"gNAkDA,UAtC0C,SAACA,GACzC,IAAIC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,GACtBC,GAAWC,EAAAA,EAAAA,QAAkC,IAC7CC,GAAUD,EAAAA,EAAAA,QAA8B,MAc9C,OAbAE,EAAAA,EAAAA,IACE,WACEC,EAAAA,GAAAA,KAAUJ,EAASK,QAAS,CAC1BC,QAAS,EACTC,EAAG,GACHC,QAAS,IACTC,MAAO,GACPC,SAAU,GACVC,KAAM,iBAGV,CAAEC,MAAOV,KAGT,SAAC,KAAD,CAAcW,IAAKX,EAAnB,SACGL,EAAUiB,cAAcC,KAAI,SAACC,EAAQC,GACpC,OAAIrB,EAAMsB,WAAaD,GAAKrB,EAAMsB,UAAkB,MAElD,SAAC,KAAD,CAEEC,MAAOH,EAAEI,OAASJ,EAAEI,OAAS,KAC7BP,IAAK,SAACQ,GACJrB,EAASK,QAAQY,GAAKI,GAJ1B,UAOE,SAAC,KAAD,CAAMC,UAAU,sBAAsBC,GAAE,gBAAWP,EAAEQ,MAArD,UACE,eAAIF,UAAU,oBAAd,SAAmCN,EAAEQ,UAPlCP","sources":["components/Work/index.tsx"],"sourcesContent":["import React, { useRef } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { getWorkDataArray } from '../../features/workData/selectors'\r\nimport { WorkListWrap, WorkBlock } from './style'\r\nimport gsap from 'gsap'\r\nimport { useGSAP } from '@gsap/react'\r\n\r\ninterface WorklistProps {\r\n  workLimit?: number\r\n}\r\n\r\nconst WorkList: React.FC<WorklistProps> = (props) => {\r\n  let DataState = useSelector(getWorkDataArray)\r\n  const itemsRef = useRef<(HTMLDivElement | null)[]>([])\r\n  const wrapRef = useRef<HTMLDivElement | null>(null)\r\n  useGSAP(\r\n    () => {\r\n      gsap.from(itemsRef.current, {\r\n        opacity: 0,\r\n        y: 50,\r\n        stagger: 0.15,\r\n        delay: 0.2,\r\n        duration: 0.6,\r\n        ease: 'power2.out',\r\n      })\r\n    },\r\n    { scope: wrapRef }\r\n  )\r\n  return (\r\n    <WorkListWrap ref={wrapRef}>\r\n      {DataState.workDataArray.map((e: any, i: number) => {\r\n        if (props.workLimit && i >= props.workLimit) return null\r\n        return (\r\n          <WorkBlock\r\n            key={i}\r\n            bgImg={e.imgSrc ? e.imgSrc : null}\r\n            ref={(el) => {\r\n              itemsRef.current[i] = el\r\n            }}\r\n          >\r\n            <Link className=\"workTitle allEffect\" to={`/work/${e.name}`}>\r\n              <h2 className=\"title text-center\">{e.name}</h2>\r\n            </Link>\r\n          </WorkBlock>\r\n        )\r\n      })}\r\n    </WorkListWrap>\r\n  )\r\n}\r\nexport default WorkList\r\n"],"names":["props","DataState","useSelector","getWorkDataArray","itemsRef","useRef","wrapRef","useGSAP","gsap","current","opacity","y","stagger","delay","duration","ease","scope","ref","workDataArray","map","e","i","workLimit","bgImg","imgSrc","el","className","to","name"],"sourceRoot":""}